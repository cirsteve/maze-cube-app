{"version":3,"sources":["stores/MazeStore.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","prototype","defaultMaxListeners","setMaxListeners","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","arguments","Array","apply","slice","addListener","listener","m","newListener","push","warned","console","trace","on","once","g","removeListener","fired","list","position","splice","removeAllListeners","key","ret","listenerCount","emitter",2,"Dispatcher","./lib/Dispatcher",3,"$Dispatcher_callbacks","$Dispatcher_isPending","$Dispatcher_isHandled","$Dispatcher_isDispatching","$Dispatcher_pendingPayload","invariant","_lastID","_prefix","register","callback","id","unregister","waitFor","ids","ii","$Dispatcher_invokeCallback","dispatch","payload","$Dispatcher_startDispatching","$Dispatcher_stopDispatching","isDispatching","./invariant",4,"condition","format","b","c","d","argIndex","replace","framesToPop",5,"global","baseIndexOf","array","value","fromIndex","index","cacheIndexOf","cache","keyPrefix","cachePush","typeCache","charAtCallback","charCodeAt","compareAscending","ac","criteria","bc","other","createCache","first","mid","last","getObject","result","escapeStringChar","match","stringEscapes","getArray","arrayPool","pop","objectPool","false","null","number","object","string","true","releaseArray","maxPoolSize","releaseObject","start","end","runInContext","context","lodash","isArray","hasOwnProperty","lodashWrapper","chainAll","__chain__","__wrapped__","baseBind","bindData","bound","partialArgs","thisBinding","baseCreate","func","thisArg","setBindData","baseClone","isDeep","stackA","stackB","isObj","className","toString","cloneableClasses","ctor","ctorByClass","boolClass","dateClass","numberClass","stringClass","regexpClass","source","reFlags","exec","lastIndex","isArr","initedStack","assign","input","forEach","forOwn","objValue","nativeCreate","baseCreateCallback","argCount","identity","__bindData__","support","funcNames","name","funcDecomp","fnToString","reFuncName","test","reThis","collection","accumulator","bind","baseCreateWrapper","isBind","partialRightArgs","isCurry","arity","bitmask","isCurryBound","isBindKey","baseDifference","values","indexOf","getIndexOf","isLarge","largeArraySize","baseFlatten","isShallow","isStrict","isArguments","valIndex","valLength","resIndex","baseIsEqual","isWhere","otherType","objectTypes","otherClass","argsClass","objectClass","String","arrayClass","aWrapped","bWrapped","ctorA","constructor","ctorB","size","forIn","baseMerge","found","isPlainObject","stackLength","baseRandom","min","max","floor","nativeRandom","baseUniq","isSorted","seen","computed","createAggregator","setter","createCallback","createWrapper","isPartial","isPartialRight","unshift","creater","escapeHtmlChar","htmlEscapes","isNative","reNative","shimIsPlainObject","unescapeHtmlChar","htmlUnescapes","clone","cloneDeep","create","properties","findKey","findLastKey","forOwnRight","forInRight","pairs","props","keys","functions","sort","has","invert","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isFinite","nativeIsFinite","nativeIsNaN","parseFloat","isNull","isRegExp","isString","mapValues","merge","sources","omit","pick","transform","proto","at","contains","target","nativeMax","every","filter","find","findLast","forEachRight","invoke","methodName","isFunc","map","Infinity","current","reduce","noaccum","reduceRight","reject","sample","guard","shuffle","nativeMin","rand","some","sortBy","toArray","compact","difference","findIndex","findLastIndex","flatten","sortedIndex","initial","intersection","argsIndex","argsLength","caches","trustIndexOf","outer","lastIndexOf","pull","range","step","ceil","remove","rest","low","high","union","uniq","without","xor","concat","zip","pluck","zipObject","after","bindAll","funcs","bindKey","compose","curry","debounce","wait","options","maxTimeoutId","stamp","timeoutId","trailingCall","lastCalled","maxWait","trailing","leading","delayed","remaining","now","clearTimeout","isCalled","setTimeout","maxDelayed","leadingCall","defer","delay","memoize","resolver","memoized","ran","partial","partialRight","throttle","debounceOptions","wrap","wrapper","constant","property","escape","reUnescapedHtml","mixin","chain","methodNames","noConflict","_","oldDash","noop","random","floating","noMin","noMax","template","text","data","settings","templateSettings","defaults","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","hasVariable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","sourceURL","templateCounter","Function","times","unescape","reEscapedHtml","uniqueId","prefix","idCounter","tap","interceptor","wrapperChain","wrapperToString","wrapperValueOf","root","Object","contextProps","Boolean","Date","Math","Number","arrayRef","objectProto","getPrototypeOf","defineProperty","nativeIsArray","nativeKeys","nativeParseInt","parseInt","funcClass","WinRTError","descriptor","shimKeys","iterable","&","<",">","\"","'","join","ownIndex","ownProps","valueOf","objProto","countBy","groupBy","indexBy","where","getTime","whitespace","radix","reLeadingSpacesAndZeros","collect","drop","each","eachRight","extend","methods","select","tail","unique","unzip","all","any","detect","findWhere","foldl","foldr","include","inject","take","head","callbackable","VERSION","configurable","enumerable","writable","boolean","function","\\","\n","\r","\t"," "," ","window","freeExports","freeModule","moduleExports","freeGlobal","define","amd","self",6,"CubedMaze","x","y","z","nodeSize","created","sets","createMaze","initNodes","nodes","initWalls","xWalls","yWalls","zWalls","walls","zArray","dim","exists","applyKruskal","rWall","randWallIndex","checkedWalls","flatWalls","nodeCount","setWall","evaluateMove","wall","startX","startY","startZ","endX","endY","endZ","getAdjacentNodes","getNodeSet","node","setsLength","setLength","testSet","testNode","set0","set1",7,"ToObject","val","from","to",8,"AppDispatcher","handleViewAction","action","handleServerAction","flux","object-assign",9,"eventEmitter","dispatcher","MazeCube","_config","_position","_maze","MazeStore","initMaze","getRenderData","marker","config","level","getConfig","getMaze","updateConfig","dimension","updateMarkerPosition","direction","updated_position","updated_value","dispatchToken","viewAction","../dispatcher/Dispatcher","events","maze-cube"],"mappings":"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","file":"stores/MazeStore.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],2:[function(require,module,exports){\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports.Dispatcher = require('./lib/Dispatcher')\n\n},{\"./lib/Dispatcher\":3}],3:[function(require,module,exports){\n/*\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Dispatcher\n * @typechecks\n */\n\n\"use strict\";\n\nvar invariant = require('./invariant');\n\nvar _lastID = 1;\nvar _prefix = 'ID_';\n\n/**\n * Dispatcher is used to broadcast payloads to registered callbacks. This is\n * different from generic pub-sub systems in two ways:\n *\n *   1) Callbacks are not subscribed to particular events. Every payload is\n *      dispatched to every registered callback.\n *   2) Callbacks can be deferred in whole or part until other callbacks have\n *      been executed.\n *\n * For example, consider this hypothetical flight destination form, which\n * selects a default city when a country is selected:\n *\n *   var flightDispatcher = new Dispatcher();\n *\n *   // Keeps track of which country is selected\n *   var CountryStore = {country: null};\n *\n *   // Keeps track of which city is selected\n *   var CityStore = {city: null};\n *\n *   // Keeps track of the base flight price of the selected city\n *   var FlightPriceStore = {price: null}\n *\n * When a user changes the selected city, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'city-update',\n *     selectedCity: 'paris'\n *   });\n *\n * This payload is digested by `CityStore`:\n *\n *   flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'city-update') {\n *       CityStore.city = payload.selectedCity;\n *     }\n *   });\n *\n * When the user selects a country, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'country-update',\n *     selectedCountry: 'australia'\n *   });\n *\n * This payload is digested by both stores:\n *\n *    CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       CountryStore.country = payload.selectedCountry;\n *     }\n *   });\n *\n * When the callback to update `CountryStore` is registered, we save a reference\n * to the returned token. Using this token with `waitFor()`, we can guarantee\n * that `CountryStore` is updated before the callback that updates `CityStore`\n * needs to query its data.\n *\n *   CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       // `CountryStore.country` may not be updated.\n *       flightDispatcher.waitFor([CountryStore.dispatchToken]);\n *       // `CountryStore.country` is now guaranteed to be updated.\n *\n *       // Select the default city for the new country\n *       CityStore.city = getDefaultCityForCountry(CountryStore.country);\n *     }\n *   });\n *\n * The usage of `waitFor()` can be chained, for example:\n *\n *   FlightPriceStore.dispatchToken =\n *     flightDispatcher.register(function(payload) {\n *       switch (payload.actionType) {\n *         case 'country-update':\n *           flightDispatcher.waitFor([CityStore.dispatchToken]);\n *           FlightPriceStore.price =\n *             getFlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *\n *         case 'city-update':\n *           FlightPriceStore.price =\n *             FlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *     }\n *   });\n *\n * The `country-update` payload will be guaranteed to invoke the stores'\n * registered callbacks in order: `CountryStore`, `CityStore`, then\n * `FlightPriceStore`.\n */\n\n  function Dispatcher() {\n    this.$Dispatcher_callbacks = {};\n    this.$Dispatcher_isPending = {};\n    this.$Dispatcher_isHandled = {};\n    this.$Dispatcher_isDispatching = false;\n    this.$Dispatcher_pendingPayload = null;\n  }\n\n  /**\n   * Registers a callback to be invoked with every dispatched payload. Returns\n   * a token that can be used with `waitFor()`.\n   *\n   * @param {function} callback\n   * @return {string}\n   */\n  Dispatcher.prototype.register=function(callback) {\n    var id = _prefix + _lastID++;\n    this.$Dispatcher_callbacks[id] = callback;\n    return id;\n  };\n\n  /**\n   * Removes a callback based on its token.\n   *\n   * @param {string} id\n   */\n  Dispatcher.prototype.unregister=function(id) {\n    invariant(\n      this.$Dispatcher_callbacks[id],\n      'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n      id\n    );\n    delete this.$Dispatcher_callbacks[id];\n  };\n\n  /**\n   * Waits for the callbacks specified to be invoked before continuing execution\n   * of the current callback. This method should only be used by a callback in\n   * response to a dispatched payload.\n   *\n   * @param {array<string>} ids\n   */\n  Dispatcher.prototype.waitFor=function(ids) {\n    invariant(\n      this.$Dispatcher_isDispatching,\n      'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n    );\n    for (var ii = 0; ii < ids.length; ii++) {\n      var id = ids[ii];\n      if (this.$Dispatcher_isPending[id]) {\n        invariant(\n          this.$Dispatcher_isHandled[id],\n          'Dispatcher.waitFor(...): Circular dependency detected while ' +\n          'waiting for `%s`.',\n          id\n        );\n        continue;\n      }\n      invariant(\n        this.$Dispatcher_callbacks[id],\n        'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n        id\n      );\n      this.$Dispatcher_invokeCallback(id);\n    }\n  };\n\n  /**\n   * Dispatches a payload to all registered callbacks.\n   *\n   * @param {object} payload\n   */\n  Dispatcher.prototype.dispatch=function(payload) {\n    invariant(\n      !this.$Dispatcher_isDispatching,\n      'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n    );\n    this.$Dispatcher_startDispatching(payload);\n    try {\n      for (var id in this.$Dispatcher_callbacks) {\n        if (this.$Dispatcher_isPending[id]) {\n          continue;\n        }\n        this.$Dispatcher_invokeCallback(id);\n      }\n    } finally {\n      this.$Dispatcher_stopDispatching();\n    }\n  };\n\n  /**\n   * Is this Dispatcher currently dispatching.\n   *\n   * @return {boolean}\n   */\n  Dispatcher.prototype.isDispatching=function() {\n    return this.$Dispatcher_isDispatching;\n  };\n\n  /**\n   * Call the callback stored with the given id. Also do some internal\n   * bookkeeping.\n   *\n   * @param {string} id\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_invokeCallback=function(id) {\n    this.$Dispatcher_isPending[id] = true;\n    this.$Dispatcher_callbacks[id](this.$Dispatcher_pendingPayload);\n    this.$Dispatcher_isHandled[id] = true;\n  };\n\n  /**\n   * Set up bookkeeping needed when dispatching.\n   *\n   * @param {object} payload\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_startDispatching=function(payload) {\n    for (var id in this.$Dispatcher_callbacks) {\n      this.$Dispatcher_isPending[id] = false;\n      this.$Dispatcher_isHandled[id] = false;\n    }\n    this.$Dispatcher_pendingPayload = payload;\n    this.$Dispatcher_isDispatching = true;\n  };\n\n  /**\n   * Clear bookkeeping used for dispatching.\n   *\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_stopDispatching=function() {\n    this.$Dispatcher_pendingPayload = null;\n    this.$Dispatcher_isDispatching = false;\n  };\n\n\nmodule.exports = Dispatcher;\n\n},{\"./invariant\":4}],4:[function(require,module,exports){\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n},{}],5:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * http://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.1';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],6:[function(require,module,exports){\nvar flatten = function flatten(arr) {\n    return arr.reduce(function (flat, toFlatten) {\n        // See if this index is an array that itself needs to be flattened.\n        if (toFlatten.some(Array.isArray)) {\n            return flat.concat(flatten(toFlatten));\n            // Otherwise just add the current index to the end of the flattened array.\n        } else {\n            return flat.concat(toFlatten);\n        }\n    });\n};\n\nvar CubedMaze = function (options) {\n    this.options=options || {x:4,y:5,z:3};\n    this.y= this.options.y;\n    this.x= this.options.x;\n    this.z= this.options.z;\n    this.nodeSize = options.nodeSize || 40;\n    this.created = new Date();\n    this.sets= [];\n\n    this.createMaze();\n\n    return this;\n};\n\nCubedMaze.prototype.initNodes= function () {\n//create nodes with the formation [x,y,z]\n    var y = 0,\n        x = 0,\n        z = 0,\n        nodes = [];\n    for (z;z < this.z;z++) {\n        nodes.push([]);\n        x = 0;\n        y = 0;\n        for (x;x < this.x;x++) {\n            nodes[z].push([]);\n            y = 0;\n            for (y;y < this.y;y++) {\n                nodes[z][x].push({\n                        x:x,\n                        y:y,\n                        z:z});\n            }\n        }\n    }\n\n    return nodes;\n};\n\nCubedMaze.prototype.initWalls= function () {\n//create walls with the following per level format\n//[[x],[y],[z]]\n    var y = 0,\n        x = 0,\n        z = 0,\n        walls = [],\n        zArray = [[],[],[]],\n        xWalls, yWalls, zWalls;\n    for (z;z < this.z;z++) {\n        x = 0;\n        y = 0;\n        zArray = [[],[],[]];\n        walls.push(zArray);\n        for (x;x < this.x;x++) {\n            y = 0;\n            xWalls = [];\n            yWalls = [];\n            zWalls = [];\n            zArray[0].push(xWalls);\n            zArray[1].push(yWalls);\n            zArray[2].push(zWalls);\n            for (y;y < this.y;y++) {\n                if (x < this.x -1) {\n                    xWalls.push({\n                        x:x,\n                        y:y,\n                        z:z,\n                        dim:'x',\n                        exists:true\n                    });\n                }\n                if (y < this.y - 1) {\n                    yWalls.push({\n                        x:x,\n                        y:y,\n                        z:z,\n                        dim:'y',\n                        exists:true\n                    });\n                }\n                if (z < this.z - 1) {\n                    zWalls.push({\n                        x:x,\n                        y:y,\n                        z:z,\n                        dim:'z',\n                        exists:true\n                        });\n                }\n            }\n        }\n    }\n\n    return walls;\n};\n\nCubedMaze.prototype.applyKruskal= function () {\n    var rWall = null,\n        randWallIndex = null,\n        checkedWalls = [],\n        flatWalls = [],\n        nodeCount = this.y * this.x * this.z,\n        length = this.walls.length,\n        i,t, w;\n\n    flatWalls = _.flatten(this.walls);\n    do  {\n        randWallIndex = Math.floor(\n                            Math.random()*flatWalls.length);\n        rWall = flatWalls.splice(randWallIndex,1)[0];\n        checkedWalls.push(rWall);\n        this.setWall(rWall);\n    } while (this.sets[0].length !== nodeCount)\n\n    return this;\n\n};\n\nCubedMaze.prototype.createMaze = function () {\n    this.nodes = this.initNodes();\n    this.walls = this.initWalls();\n    this.applyKruskal();\n    return this;\n};\n\nCubedMaze.prototype.evaluateMove = function (start, end) {\n    var wall = {exists:true};\n    var startX = start[0];\n    var startY = start[1];\n    var startZ = start[2];\n    var endX = end[0];\n    var endY = end[1];\n    var endZ = end[2];\n    //its a lateral move so check an x axis wall\n    if (startX !== endX) {\n        //if the end node is -1 or one less then the totoal\n        //x nodes return false because its a border\n        if (endX === -1 || endX === this.x) {\n            return wall;\n        }\n        if (startX < endX) {\n            wall = this.walls[startZ][0][startX][startY];\n        } else {\n            wall = this.walls[startZ][0][endX][startY];\n        }\n    } else if (startY !== endY) {\n        if (endY === -1 || endY === this.y) {\n            return wall;\n        }\n        if (startY < endY) {\n            wall = this.walls[startZ][1][startX][startY];\n        } else {\n            wall = this.walls[startZ][1][startX][endY];\n        }\n    } else {\n        if (endZ === -1 || endZ === this.z) {\n            return wall;\n        }\n        if (startZ < endZ) {\n            wall = this.walls[startZ][2][startX][startY];\n        } else {\n            wall = this.walls[endZ][2][startX][startY];\n        }\n    }\n    return wall.exists;\n};\n\nCubedMaze.prototype.getAdjacentNodes= function (wall) {\n    if (wall.dim === 'z') {\n        //wall.dim:0 denotes a z dimension wall\n        //return adjacent nodes are above and below\n        return [\n                this.nodes[wall.z][wall.x][wall.y],\n                this.nodes[wall.z+1][wall.x][wall.y]\n                ];\n    } else if (wall.dim === 'x') {\n        //wall.dim:1 denotes a x dimension wall\n        //return adjacent nodes are side by side\n        return [\n                this.nodes[wall.z][wall.x][wall.y],\n                this.nodes[wall.z][wall.x+1][wall.y]\n                ];\n    } else if (wall.dim === 'y') {\n        //wall.dim:2 denotes a y dimension wall\n        //return adjacent nodes are top and bottom\n        return [\n                this.nodes[wall.z][wall.x][wall.y],\n                this.nodes[wall.z][wall.x][wall.y+1]\n                ];\n    }\n\n};\n\nCubedMaze.prototype.getNodeSet= function (node) {\n    var i = 0,\n        t = 0,\n        setsLength = this.sets.length,\n        setLength = null,\n        testSet = null,\n        testNode = null;\n\n    for (i;i<setsLength;i++) {\n        testSet = this.sets[i];\n        setLength = testSet.length;\n        for (t = 0;t<setLength;t++) {\n            testNode = testSet[t];\n            if (node.x === testNode.x &&\n                node.y === testNode.y &&\n                node.z === testNode.z) {\n                return i;\n            }\n        }\n    }\n\n    return null;\n};\n\nCubedMaze.prototype.setWall = function (wall) {\n    //set the wall to exists based on its\n    //adjacent nodes\n    var nodes = this.getAdjacentNodes(wall);\n\n    var set0 = this.getNodeSet(nodes[0]),\n        set1 = this.getNodeSet(nodes[1]);\n\n    if (set0 === set1 && set0 === null ) {\n        wall.exists = false;\n        this.sets.push(nodes);\n    } else if (set0 === set1) {\n       wall.exists = true;\n    } else if (set0 === null && (set1 === 0 || set1)) {\n        wall.exists = false;\n        this.sets[set1].push(nodes[0])\n    } else if (set1 === null && (set0 === 0 || set0)) {\n        wall.exists = false;\n        this.sets[set0].push(nodes[1])\n    } else {\n        wall.exists = false;\n        this.sets[set0] = this.sets[set0].concat(this.sets[set1]);\n        this.sets.splice(set1,1);\n    }\n\n    return wall;\n};\n\nmodule.exports = CubedMaze;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],8:[function(require,module,exports){\nvar Dispatcher = require('flux').Dispatcher;\nvar assign = require('object-assign');\n\nvar AppDispatcher = assign(new Dispatcher(), {\n    handleViewAction: function (action) {\n        this.dispatch({\n            source: 'VIEW_ACTION',\n            action: action\n        });\n    },\n    handleServerAction: function (action) {\n        this.dispatch({\n            source: 'SERVER_ACTION',\n            action: action\n        });\n    }\n});\n\nmodule.exports = AppDispatcher;\n\n},{\"flux\":2,\"object-assign\":7}],9:[function(require,module,exports){\nvar _ = require('lodash');\nvar eventEmitter = require('events').EventEmitter;\nvar assign = require('object-assign');\nvar dispatcher = require('../dispatcher/Dispatcher');\nvar MazeCube = require('maze-cube');\n\nvar _config = {\n    x: 10,\n    y: 10,\n    z: 4\n};\n\nvar _position = {\n    x: 0,\n    y: 0,\n    z: 0\n};\n\nvar _maze = {walls:[]};\n\nvar MazeStore = assign({}, eventEmitter.prototype, {\n    initMaze: function () {\n        _maze =  new MazeCube(_config);\n    },\n    getRenderData: function () {\n        var z = _position.z;\n        return {\n            walls: _maze.walls[z],\n            marker: _position,\n            config: _config,\n            level: z\n        };\n    },\n    getConfig: function () {\n        return _config;\n    },\n    getMaze: function () {\n        return _maze;\n    },\n    updateConfig: function (dimension, value) {\n        _config[dimension] = value;\n    },\n    updateMarkerPosition: function (dimension, direction) {\n        var updated_position = _.clone(_position);\n        var updated_value = updated_position[dimension];\n        if (direction === '+') {\n            updated_value++;\n        } else {\n            updated_value--;\n        }\n        updated_position[dimension] = updated_value;\n        if (_maze.evaluateMove(_position, updated_position)) {\n            _position = updated_position;\n        }\n    }\n});\n\nMazeStore.dispatchToken = dispatcher.register(function(payload) {\n    var action = payload.action;\n\n    switch(action.viewAction) {\n        case 'INIT_MAZE':\n            MazeStore.initMaze();\n            break;\n        case 'UPDATE_CONFIG':\n            MazeStore.updateConfig(action.dimension, action.value);\n        case 'UPDATE_POSITION':\n            MazeStore.updateMarkerPosition(action.dimension, action.direction);\n            break;\n    }\n\n    MazeStore.emit('change');\n    return true;\n});\n\nmodule.exports = MazeStore;\n\n},{\"../dispatcher/Dispatcher\":8,\"events\":1,\"lodash\":5,\"maze-cube\":6,\"object-assign\":7}]},{},[9]);\n"],"sourceRoot":"/source/"}