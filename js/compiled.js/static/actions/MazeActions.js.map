{"version":3,"sources":["actions/MazeActions.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Dispatcher","./lib/Dispatcher",2,"this","$Dispatcher_callbacks","$Dispatcher_isPending","$Dispatcher_isHandled","$Dispatcher_isDispatching","$Dispatcher_pendingPayload","invariant","_lastID","_prefix","prototype","register","callback","id","unregister","waitFor","ids","ii","$Dispatcher_invokeCallback","dispatch","payload","$Dispatcher_startDispatching","$Dispatcher_stopDispatching","isDispatching","./invariant",3,"condition","format","b","c","d","error","undefined","args","argIndex","replace","framesToPop",4,"keyMirror","obj","key","ret","Object","Array","isArray","hasOwnProperty",5,"ToObject","val","TypeError","assign","target","from","keys","to","arguments",6,"Constants","mazeActions","initMaze","handleViewAction","viewAction","ActionTypes","INIT_MAZE","updateConfig","dimension","value","UPDATE_CONFIG","updatePosition","direction","UPDATE_POSITION","../constants/Constants","../dispatcher/Dispatcher",7,"keymirror",8,"AppDispatcher","action","source","handleServerAction","flux","object-assign"],"mappings":"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","file":"actions/MazeActions.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports.Dispatcher = require('./lib/Dispatcher')\n\n},{\"./lib/Dispatcher\":2}],2:[function(require,module,exports){\n/*\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Dispatcher\n * @typechecks\n */\n\n\"use strict\";\n\nvar invariant = require('./invariant');\n\nvar _lastID = 1;\nvar _prefix = 'ID_';\n\n/**\n * Dispatcher is used to broadcast payloads to registered callbacks. This is\n * different from generic pub-sub systems in two ways:\n *\n *   1) Callbacks are not subscribed to particular events. Every payload is\n *      dispatched to every registered callback.\n *   2) Callbacks can be deferred in whole or part until other callbacks have\n *      been executed.\n *\n * For example, consider this hypothetical flight destination form, which\n * selects a default city when a country is selected:\n *\n *   var flightDispatcher = new Dispatcher();\n *\n *   // Keeps track of which country is selected\n *   var CountryStore = {country: null};\n *\n *   // Keeps track of which city is selected\n *   var CityStore = {city: null};\n *\n *   // Keeps track of the base flight price of the selected city\n *   var FlightPriceStore = {price: null}\n *\n * When a user changes the selected city, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'city-update',\n *     selectedCity: 'paris'\n *   });\n *\n * This payload is digested by `CityStore`:\n *\n *   flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'city-update') {\n *       CityStore.city = payload.selectedCity;\n *     }\n *   });\n *\n * When the user selects a country, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'country-update',\n *     selectedCountry: 'australia'\n *   });\n *\n * This payload is digested by both stores:\n *\n *    CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       CountryStore.country = payload.selectedCountry;\n *     }\n *   });\n *\n * When the callback to update `CountryStore` is registered, we save a reference\n * to the returned token. Using this token with `waitFor()`, we can guarantee\n * that `CountryStore` is updated before the callback that updates `CityStore`\n * needs to query its data.\n *\n *   CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       // `CountryStore.country` may not be updated.\n *       flightDispatcher.waitFor([CountryStore.dispatchToken]);\n *       // `CountryStore.country` is now guaranteed to be updated.\n *\n *       // Select the default city for the new country\n *       CityStore.city = getDefaultCityForCountry(CountryStore.country);\n *     }\n *   });\n *\n * The usage of `waitFor()` can be chained, for example:\n *\n *   FlightPriceStore.dispatchToken =\n *     flightDispatcher.register(function(payload) {\n *       switch (payload.actionType) {\n *         case 'country-update':\n *           flightDispatcher.waitFor([CityStore.dispatchToken]);\n *           FlightPriceStore.price =\n *             getFlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *\n *         case 'city-update':\n *           FlightPriceStore.price =\n *             FlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *     }\n *   });\n *\n * The `country-update` payload will be guaranteed to invoke the stores'\n * registered callbacks in order: `CountryStore`, `CityStore`, then\n * `FlightPriceStore`.\n */\n\n  function Dispatcher() {\n    this.$Dispatcher_callbacks = {};\n    this.$Dispatcher_isPending = {};\n    this.$Dispatcher_isHandled = {};\n    this.$Dispatcher_isDispatching = false;\n    this.$Dispatcher_pendingPayload = null;\n  }\n\n  /**\n   * Registers a callback to be invoked with every dispatched payload. Returns\n   * a token that can be used with `waitFor()`.\n   *\n   * @param {function} callback\n   * @return {string}\n   */\n  Dispatcher.prototype.register=function(callback) {\n    var id = _prefix + _lastID++;\n    this.$Dispatcher_callbacks[id] = callback;\n    return id;\n  };\n\n  /**\n   * Removes a callback based on its token.\n   *\n   * @param {string} id\n   */\n  Dispatcher.prototype.unregister=function(id) {\n    invariant(\n      this.$Dispatcher_callbacks[id],\n      'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n      id\n    );\n    delete this.$Dispatcher_callbacks[id];\n  };\n\n  /**\n   * Waits for the callbacks specified to be invoked before continuing execution\n   * of the current callback. This method should only be used by a callback in\n   * response to a dispatched payload.\n   *\n   * @param {array<string>} ids\n   */\n  Dispatcher.prototype.waitFor=function(ids) {\n    invariant(\n      this.$Dispatcher_isDispatching,\n      'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n    );\n    for (var ii = 0; ii < ids.length; ii++) {\n      var id = ids[ii];\n      if (this.$Dispatcher_isPending[id]) {\n        invariant(\n          this.$Dispatcher_isHandled[id],\n          'Dispatcher.waitFor(...): Circular dependency detected while ' +\n          'waiting for `%s`.',\n          id\n        );\n        continue;\n      }\n      invariant(\n        this.$Dispatcher_callbacks[id],\n        'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n        id\n      );\n      this.$Dispatcher_invokeCallback(id);\n    }\n  };\n\n  /**\n   * Dispatches a payload to all registered callbacks.\n   *\n   * @param {object} payload\n   */\n  Dispatcher.prototype.dispatch=function(payload) {\n    invariant(\n      !this.$Dispatcher_isDispatching,\n      'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n    );\n    this.$Dispatcher_startDispatching(payload);\n    try {\n      for (var id in this.$Dispatcher_callbacks) {\n        if (this.$Dispatcher_isPending[id]) {\n          continue;\n        }\n        this.$Dispatcher_invokeCallback(id);\n      }\n    } finally {\n      this.$Dispatcher_stopDispatching();\n    }\n  };\n\n  /**\n   * Is this Dispatcher currently dispatching.\n   *\n   * @return {boolean}\n   */\n  Dispatcher.prototype.isDispatching=function() {\n    return this.$Dispatcher_isDispatching;\n  };\n\n  /**\n   * Call the callback stored with the given id. Also do some internal\n   * bookkeeping.\n   *\n   * @param {string} id\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_invokeCallback=function(id) {\n    this.$Dispatcher_isPending[id] = true;\n    this.$Dispatcher_callbacks[id](this.$Dispatcher_pendingPayload);\n    this.$Dispatcher_isHandled[id] = true;\n  };\n\n  /**\n   * Set up bookkeeping needed when dispatching.\n   *\n   * @param {object} payload\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_startDispatching=function(payload) {\n    for (var id in this.$Dispatcher_callbacks) {\n      this.$Dispatcher_isPending[id] = false;\n      this.$Dispatcher_isHandled[id] = false;\n    }\n    this.$Dispatcher_pendingPayload = payload;\n    this.$Dispatcher_isDispatching = true;\n  };\n\n  /**\n   * Clear bookkeeping used for dispatching.\n   *\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_stopDispatching=function() {\n    this.$Dispatcher_pendingPayload = null;\n    this.$Dispatcher_isDispatching = false;\n  };\n\n\nmodule.exports = Dispatcher;\n\n},{\"./invariant\":3}],3:[function(require,module,exports){\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n},{}],4:[function(require,module,exports){\n/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n\"use strict\";\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  if (!(obj instanceof Object && !Array.isArray(obj))) {\n    throw new Error('keyMirror(...): Argument must be an object.');\n  }\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],6:[function(require,module,exports){\nvar Dispatcher = require('../dispatcher/Dispatcher');\nvar Constants = require('../constants/Constants');\n\nvar mazeActions = {\n    initMaze: function () {\n        Dispatcher.handleViewAction({\n            viewAction: Constants.ActionTypes.INIT_MAZE\n        });\n    },\n    updateConfig: function (dimension, value) {\n        Dispatcher.handleViewAction({\n            viewAction: Constants.ActionTypes.UPDATE_CONFIG,\n            dimension: dimension,\n            value: value\n        });\n    },\n    updatePosition: function (dimension, direction) {\n        Dispatcher.handleViewAction({\n            viewAction: Constants.ActionTypes.UPDATE_POSITION,\n            dimension: dimension,\n            direction: direction\n        });\n    }\n};\n\nmodule.exports = mazeActions;\n\n},{\"../constants/Constants\":7,\"../dispatcher/Dispatcher\":8}],7:[function(require,module,exports){\nvar keymirror = require('keymirror');\n\nmodule.exports = {\n    ActionTypes: keymirror({\n        INIT_MAZE: null,\n        UPDATE_CONFIG: null,\n        UPDATE_POSITION: null\n    })\n};\n\n},{\"keymirror\":4}],8:[function(require,module,exports){\nvar Dispatcher = require('flux').Dispatcher;\nvar assign = require('object-assign');\n\nvar AppDispatcher = assign(new Dispatcher(), {\n    handleViewAction: function (action) {\n        this.dispatch({\n            source: 'VIEW_ACTION',\n            action: action\n        });\n    },\n    handleServerAction: function (action) {\n        this.dispatch({\n            source: 'SERVER_ACTION',\n            action: action\n        });\n    }\n});\n\nmodule.exports = AppDispatcher;\n\n},{\"flux\":1,\"object-assign\":5}]},{},[6]);\n"],"sourceRoot":"/source/"}